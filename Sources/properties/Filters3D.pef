#include "PropertyCore.h"
#include "PropertyGUI.h"

#include "Filter3DBloom.peg.h"
#include "Filter3DDOF.peg.h"
#include "Filter3DLensFlares.peg.h"
#include "Filter3DToneMapping.peg.h"
#include "GLSLParsedFragShader.peg.h"


property_set Filters3D
{

  extern property_set Filter3DDOF DOF
  {
    description = "<html><body>"
                  "GLSL depth of field with bokeh v2.4 implementation based on:"
                  "<a href=\"http://blenderartists.org/forum/showthread.php?237488-GLSL-depth-of-field-with-bokeh-v2-4-(update)\"><span style=\" text-decoration: underline; color:#0000ff;\">Martins Upitis shader</a><br/>"
                  "</body></html>";
    displayName = "Depth of Field";
    state = QtnPropertyStateCollapsed;
  }
  extern property_set Filter3DBloom Bloom
  {
    description = "Glow effect.";
    displayName = "Glow";
    state = QtnPropertyStateCollapsed;
  }
  extern property_set Filter3DLensFlares Flares
  {
      description = "<html><body>"
                    "Lens flares effect based on "
                    "<a href=\"http://john-chapman-graphics.blogspot.com/2013/02/pseudo-lens-flare.html\"><span style=\" text-decoration: underline; color:#0000ff;\">John Chapman article.</a><br/>"
                    "</body></html>";
    displayName = "Pseudo lens flares.";
    state = QtnPropertyStateCollapsed;
  }
  extern property_set Filter3DToneMapping ToneMapping
  {
      description = "<html><body>"
                    "Minimal version of Reinhard's tone mapping algorithm based on "
                    "<a href=\"http://www.nutty.ca/?page_id=352&link=hdr\"><span style=\" text-decoration: underline; color:#0000ff;\">Nutty Shell article.</a><br/>"
                    "</body></html>";
      displayName = "Reinhard's tone mapping";
    state = QtnPropertyStateCollapsed;
  }


  extern property_set GLSLParsedFragShader ParsedShader
  {
      description = "AwesomeBump engine can be supplied with "
                    "custom GLSL fragment shader in order to "
                    "customize 3D render output to your engine."
                    "In order to make "
                    "custom fragment shader you must create a new "
                    ".frag file in Core/Render folder. Created file "
                    "will be then parsed during the initialization process."
                    "See Template.frag file to undersdand how this shader "
                    "should be written in order to be compatible with AB."
                    "Note: Saving option does not work for this feature, thus "
                    "all the settings has to be defined in your *.frag file.";
      displayName = "Custom rednder settings";
      state = QtnPropertyStateCollapsed;
  }


}
